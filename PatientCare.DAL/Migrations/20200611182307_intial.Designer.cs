// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientCare.DAL;

namespace PatientCare.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200611182307_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PatientCare.Entity.AppModel.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_Doctor")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("TimeFrom")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeTo")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Doctor");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.BloodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BloodTypes");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_Doctor")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Patient")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Doctor");

                    b.HasIndex("Fk_Patient");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.CoronaStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoronaStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(5761),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(5802),
                            Name = "Positive"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6509),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6536),
                            Name = "Negative"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6556),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6564),
                            Name = "Low"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6571),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6579),
                            Name = "Moderate"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6586),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(6593),
                            Name = "Severe"
                        });
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Gender")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Specialization")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Gender");

                    b.HasIndex("Fk_Specialization");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.DoctorDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_Doctor")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Doctor");

                    b.ToTable("DoctorDocuments");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.DonateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DonateTypes");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_DonateType")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Patient")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_DonateType");

                    b.HasIndex("Fk_Patient");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(3705),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(3734),
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(4494),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(4544),
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableBeds")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_Chat")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Chat");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.OfflineCoronaTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_CoronaStatus")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Patient")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_CoronaStatus");

                    b.HasIndex("Fk_Patient");

                    b.ToTable("OfflineCoronaTests");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.OnlineCoronaTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_CoronaStatus")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Patient")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_CoronaStatus");

                    b.HasIndex("Fk_Patient");

                    b.ToTable("OnlineCoronaTests");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CronicDiseases")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_BloodType")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Gender")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsPregnant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Fk_BloodType");

                    b.HasIndex("Fk_Gender");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.PatientDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_Patient")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Patient");

                    b.ToTable("PatientDocuments");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Pharmacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("PatientCare.Entity.AuthModel.AccessLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessLevel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 107, DateTimeKind.Unspecified).AddTicks(6206),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 113, DateTimeKind.Unspecified).AddTicks(4962),
                            Name = "FullAccess"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 113, DateTimeKind.Unspecified).AddTicks(7225),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 113, DateTimeKind.Unspecified).AddTicks(7498),
                            Name = "ControlAccess"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 113, DateTimeKind.Unspecified).AddTicks(7712),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 113, DateTimeKind.Unspecified).AddTicks(7757),
                            Name = "ViewAccess"
                        });
                });

            modelBuilder.Entity("PatientCare.Entity.AuthModel.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JopTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(7738),
                            Email = "Developer@App.com",
                            FullName = "Developer",
                            IsActive = true,
                            JopTitle = "Developer",
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(7778),
                            Password = "ygag8333aw"
                        });
                });

            modelBuilder.Entity("PatientCare.Entity.AuthModel.SystemUserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fk_AccessLevel")
                        .HasColumnType("int");

                    b.Property<int>("Fk_SystemUser")
                        .HasColumnType("int");

                    b.Property<int>("Fk_SystemView")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Fk_AccessLevel");

                    b.HasIndex("Fk_SystemUser");

                    b.HasIndex("Fk_SystemView");

                    b.ToTable("SystemUserPermission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 118, DateTimeKind.Unspecified).AddTicks(9857),
                            Fk_AccessLevel = 1,
                            Fk_SystemUser = 1,
                            Fk_SystemView = 1,
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 118, DateTimeKind.Unspecified).AddTicks(9980)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 119, DateTimeKind.Unspecified).AddTicks(2615),
                            Fk_AccessLevel = 1,
                            Fk_SystemUser = 1,
                            Fk_SystemView = 2,
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 119, DateTimeKind.Unspecified).AddTicks(2674)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 119, DateTimeKind.Unspecified).AddTicks(2732),
                            Fk_AccessLevel = 1,
                            Fk_SystemUser = 1,
                            Fk_SystemView = 3,
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 119, DateTimeKind.Unspecified).AddTicks(2741)
                        });
                });

            modelBuilder.Entity("PatientCare.Entity.AuthModel.SystemView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemView");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(938),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(1030),
                            Name = "Home"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(2216),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(2266),
                            Name = "SystemView"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(2294),
                            LastModifiedAt = new DateTime(2020, 6, 11, 20, 23, 7, 116, DateTimeKind.Unspecified).AddTicks(2303),
                            Name = "SystemUser"
                        });
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Agenda", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.Doctor", "Doctor")
                        .WithMany("Agenda")
                        .HasForeignKey("Fk_Doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Chat", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.Doctor", "Doctor")
                        .WithMany("Chats")
                        .HasForeignKey("Fk_Doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AppModel.Patient", "Patient")
                        .WithMany("Chats")
                        .HasForeignKey("Fk_Patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Doctor", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.Gender", "Gender")
                        .WithMany("Doctors")
                        .HasForeignKey("Fk_Gender")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AppModel.Specialization", "Specialization")
                        .WithMany("Doctors")
                        .HasForeignKey("Fk_Specialization")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.DoctorDocument", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.Doctor", "Doctor")
                        .WithMany("DoctorDocuments")
                        .HasForeignKey("Fk_Doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Donation", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.DonateType", "DonateType")
                        .WithMany("Donations")
                        .HasForeignKey("Fk_DonateType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AppModel.Patient", "Patient")
                        .WithMany("Donations")
                        .HasForeignKey("Fk_Patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Message", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("Fk_Chat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.OfflineCoronaTest", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.CoronaStatus", "CoronaStatus")
                        .WithMany("OfflineCoronaTests")
                        .HasForeignKey("Fk_CoronaStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AppModel.Patient", "Patient")
                        .WithMany("OfflineCoronaTests")
                        .HasForeignKey("Fk_Patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.OnlineCoronaTest", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.CoronaStatus", "CoronaStatus")
                        .WithMany("OnlineCoronaTests")
                        .HasForeignKey("Fk_CoronaStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AppModel.Patient", "Patient")
                        .WithMany("OnlineCoronaTests")
                        .HasForeignKey("Fk_Patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.Patient", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.BloodType", "BloodType")
                        .WithMany("Patients")
                        .HasForeignKey("Fk_BloodType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AppModel.Gender", "Gender")
                        .WithMany("Patients")
                        .HasForeignKey("Fk_Gender")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AppModel.PatientDocument", b =>
                {
                    b.HasOne("PatientCare.Entity.AppModel.Patient", "Patient")
                        .WithMany("PatientDocuments")
                        .HasForeignKey("Fk_Patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientCare.Entity.AuthModel.SystemUserPermission", b =>
                {
                    b.HasOne("PatientCare.Entity.AuthModel.AccessLevel", "AccessLevel")
                        .WithMany("SystemUserPermission")
                        .HasForeignKey("Fk_AccessLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AuthModel.SystemUser", "SystemUser")
                        .WithMany("SystemUserPermission")
                        .HasForeignKey("Fk_SystemUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientCare.Entity.AuthModel.SystemView", "SystemView")
                        .WithMany("SystemUserPermission")
                        .HasForeignKey("Fk_SystemView")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
